add_library(esp8266
        abi.cpp
        AddrList.h
        aes_unwrap.cpp
        Arduino.h
        avr/dtostrf.h
        avr/pgmspace.h
        base64.cpp
        base64.h
        binary.h
        CallBackList.h
        cbuf.cpp
        cbuf.h
        Client.h
        cont.h
        cont_util.cpp
        coredecls.h
        core_esp8266_app_entry_noextra4k.cpp
        core_esp8266_eboot_command.cpp
        core_esp8266_features.cpp
        core_esp8266_features.h
        core_esp8266_flash_quirks.cpp
        core_esp8266_flash_utils.cpp
        core_esp8266_i2s.cpp
        core_esp8266_i2s.h
        core_esp8266_main.cpp
        core_esp8266_non32xfer.cpp
        core_esp8266_non32xfer.h
        core_esp8266_noniso.cpp
        core_esp8266_phy.cpp
        core_esp8266_postmortem.cpp
        core_esp8266_si2c.cpp
        core_esp8266_sigma_delta.cpp
        core_esp8266_spi_utils.cpp
        core_esp8266_timer.cpp
        core_esp8266_version.h
        core_esp8266_vm.cpp
        core_esp8266_vm.h
        core_esp8266_waveform.h
        core_esp8266_waveform_phase.cpp
        core_esp8266_waveform_pwm.cpp
        core_esp8266_wiring_analog.cpp
        core_esp8266_wiring.cpp
        core_esp8266_wiring_digital.cpp
        core_esp8266_wiring_pulse.cpp
        core_esp8266_wiring_pwm.cpp
        core_esp8266_wiring_shift.cpp
        core_version.h
        crc32.cpp
        Crypto.cpp
        Crypto.h
        debug.cpp
        debug.h
        eboot_command.h
        esp8266_peri.h
        esp8266_undocumented.h
        Esp.cpp
        Esp-frag.cpp
        Esp.h
        esp_priv.h
        Esp-version.cpp
        exc-sethandler.cpp
        flash_hal.cpp
        flash_hal.h
        flash_quirks.h
        flash_utils.h
        FS.cpp
        FS.h
        FSImpl.h
        FSnoop.cpp
        FunctionalInterrupt.cpp
        FunctionalInterrupt.h
        gdb_hooks.cpp
        gdb_hooks.h
        HardwareSerial.cpp
        HardwareSerial.h
        heap.cpp
        hwdt_app_entry.cpp
        hwdt_app_entry.h
        interrupts.h
        IPAddress.cpp
        IPAddress.h
        libb64/cdecode.cpp
        libb64/cdecode.h
        libb64/cencode.cpp
        libb64/cencode.h
        libc_replacements.cpp
        LwipDhcpServer.cpp
        LwipDhcpServer.h
        LwipDhcpServer-NonOS.cpp
        LwipIntfCB.cpp
        LwipIntf.cpp
        LwipIntfDev.h
        LwipIntf.h
        MD5Builder.cpp
        MD5Builder.h
        md5.h
        mmu_iram.cpp
        mmu_iram.h
        pgmspace.h
        PolledTimeout.h
        Printable.h
        Print.cpp
        Print.h
        reboot_uart_dwnld.cpp
        reboot_uart_dwnld.h
        Schedule.cpp
        Schedule.h
        Server.h
        sigma_delta.h
        spiffs_api.cpp
        spiffs_api.h
        spiffs/spiffs_cache.cpp
        spiffs/spiffs_check.cpp
        spiffs/spiffs_config.h
        spiffs/spiffs_gc.cpp
        spiffs/spiffs.h
        spiffs/spiffs_hydrogen.cpp
        spiffs/spiffs_nucleus.cpp
        spiffs/spiffs_nucleus.h
        spi_flash_defs.h
        spi_utils.h
        spi_vendors.h
        sqrt32.cpp
        StackThunk.cpp
        StackThunk.h
        stdlib_noniso.cpp
        stdlib_noniso.h
        Stream.cpp
        StreamDev.h
        Stream.h
        StreamSend.cpp
        StreamString.h
        time.cpp
        Tone.cpp
        twi.h
        twi_util.h
        TypeConversion.cpp
        TypeConversion.h
        TZ.h
        uart.cpp
        uart.h
        Udp.h
        umm_malloc/dbglog/dbglog.h
        umm_malloc/Notes.h
        umm_malloc/umm_heap_select.h
        umm_malloc/umm_info.c
        umm_malloc/umm_integrity.c
        umm_malloc/umm_local.c
        umm_malloc/umm_local.h
        umm_malloc/umm_malloc_cfg.h
        umm_malloc/umm_malloc.cpp
        umm_malloc/umm_malloc.h
        umm_malloc/umm_poison.c
        Updater.cpp
        Updater.h
        Updater_Signing.h
        user_config.h
        WCharacter.h
        wiring_private.h
        wl_definitions.h
        WMath.cpp
        WString.cpp
        WString.h
        xtruntime-frames.h
        )
add_library(cores::esp8266 ALIAS esp8266)
target_include_directories(esp8266
        PUBLIC
        $<INSTALL_INTERFACE:include>
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
        )
target_link_libraries(esp8266 PRIVATE cores::esp8266)